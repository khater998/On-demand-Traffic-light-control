/******************************************************************************
 *
 * Module: TIMER0
 *
 * File Name: timer0.h
 *
 * Description: Header file for the ATmega32 TIMER0 driver
 *
 * Author: MOHAMED IBRAHIM
 *
 *******************************************************************************/

#ifndef MCAL_LAYER_TIMER0_TIMER0_H_
#define MCAL_LAYER_TIMER0_TIMER0_H_



/***********************************************************************************************/
/*								  Section: INCLUDES                                            */
/***********************************************************************************************/
#include "../../STD_types.h"
#include "../../Common_Macros.h"
#include <avr/io.h>

/***********************************************************************************************/
/*								  Section: MACRO DECLARATIONS                                  */
/***********************************************************************************************/

#define F_MC								(1000000)
#define TIMER0_NORMAL_MODE_ENABLE()			TCCR0 = (TCCR0 & 0xB7)
#define TIMER0_CTC_MODE_ENABLE()			SET_BIT(TCCR0, WGM01); CLR_BIT(TCCR0, WGM00)

#define TIMER0_NO_PRESCALER_TICK_TIME 		(1.0f 		/ (F_MC / 1000000))
#define TIMER0_PRESCALER_8_TICK_TIME 		(8.0f 		/ (F_MC / 1000000))
#define TIMER0_PRESCALER_64_TICK_TIME 		(64.0f 		/ (F_MC / 1000000))
#define TIMER0_PRESCALER_256_TICK_TIME 		(256.0f 	/ (F_MC / 1000000))
#define TIMER0_PRESCALER_1024_TICK_TIME 	(1024.0f	/ (F_MC / 1000000))

#define TIMER0_NO_PRESCALER_OVF_TIME 		(256 * (TIMER0_NO_PRESCALER_TICK_TIME))
#define TIMER0_PRESCALER_8_OVF_TIME 		(256 * (TIMER0_PRESCALER_8_TICK_TIME))
#define TIMER0_PRESCALER_64_OVF_TIME 		(256 * (TIMER0_PRESCALER_64_TICK_TIME))
#define TIMER0_PRESCALER_256_OVF_TIME 		(256 * (TIMER0_PRESCALER_256_TICK_TIME))
#define TIMER0_PRESCALER_1024_OVF_TIME 		(256 * (TIMER0_PRESCALER_1024_TICK_TIME))



/***********************************************************************************************/
/*								  Section: MACRO FUNCTIONS DECLARATIONS                        */
/***********************************************************************************************/
#define TIMER0_STOP()							(TCCR0 &=  (0xF8))
#define TIMER0_SET_PRESCALER(prescaler)			(TCCR0 =  (TCCR0 & 0xF8) | (prescaler & (0x07)))


/***********************************************************************************************/
/*								  Section: DATA TYPE DECLARATIONS                              */
/***********************************************************************************************/
typedef enum
{
	TIMER0_STOPPED,
	TIMER0_NO_PRESCALER,
	TIMER0_PRESCALER_8,
	TIMER0_PRESCALER_64,
	TIMER0_PRESCALER_256,
	TIMER0_PRESCALER_1024,
	TIMER0_EXTERNAL_FALLING_EDGE, /* CLOCK SOURCE TO EXTERNAL "TC0 PIN" increment with falling edge */
	TIMER0_EXTERNAL_RISING_EDGE		/* CLOCK SOURCE TO EXTERNAL "TC0 PIN" increment with rising edge */
}timer0_clock_t;

/***********************************************************************************************/
/*								  Section: FUNCTION DECLARATIONS                               */
/***********************************************************************************************/
/**
 * @brief: Starts timer0 to calculate required time, Generates interrupt when time is reached,
 *		   Global interrupt and Timer0 interrupt must be enabled externally to execute an ISR.
 * @param time_ms: The required time to be generated by timer
 * @return status of the function:
 * 						(E_OK): the function finished successfully
 * 						(E_NOT_OK): A problem occurred in function
 *
 */
STD_ReturnType TIMER0_calc_ms(uint16 time_ms);

#endif /* MCAL_LAYER_TIMER0_TIMER0_H_ */
